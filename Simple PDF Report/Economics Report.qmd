---
format: pdf
header-includes:
  \usepackage{fancyhdr}
  \usepackage{color}
  \pagestyle{fancy}
  \fancyhf{}
  \renewcommand{\headrulewidth}{0pt}
  \setlength \headheight{20.35004pt}
  \definecolor{blue}{RGB}{0,61,115}
  \fancyhead[L]{\textcolor{blue}{\rule[-4pt]{\textwidth}{20pt}}}
  \fancyhead[C]{\bfseries \textcolor{white}{Economic Overview}}
  \fancyfoot[L]{\textcolor{blue}{\rule[-4pt]{\textwidth}{24pt}}}
mainfont: Times New Roman
fontsize: 12pt
editor: visual
---

```{r setup}
#| echo: false
#| message: false
options(warn = -1)
library('ecolytics')
if (!require("tibble")) {install.packages("tibble"); library('tibble')}
if (!require("fredr")) {install.packages("fredr"); library('fredr')}
if (!require("plyr")) {install.packages("plyr"); library('plyr')}
if (!require("dplyr")) {install.packages("dplyr"); library('dplyr')}
if (!require("lubridate")) {install.packages("lubridate"); library('lubridate')}
if (!require("purrr")) {install.packages("purrr"); library('purrr')}
if (!require("kableExtra")) {install.packages("kableExtra"); library('kableExtra')}
if (!require("grid")) {install.packages("grid"); library('grid')}
if (!require("gridExtra")) {install.packages("gridExtra"); library('gridExtra')}
if (!require("lubridate")) {install.packages("lubridate"); library('lubridate')}
if (!require("ggplot2")) {install.packages("ggplot2"); library('ggplot2')}
if (!require("ggthemes")) {install.packages("ggthemes"); library('ggthemes')}

## Set File Parameters
fredr_set_key('a12c9684bc85a0d907b7f10bade21e93')

# Set date timeframe for filtering
data_start <-as.Date('2015-01-01')
data_end <-floor_date(Sys.Date(),"month") - 1

# Download Source
dl_source <-'fred'
```

```{r initial_table}
#| echo: false
#| message: false

keys <-c('GDPNOW', 'PCENOW', 'GDPINOW', 'GOVNOW')
gdp_data <-eco.download(source= 'fred', keys = keys, shape = 'wide', periodicity = 'quarterly', show.recession = 'n') 

gdp_data %>%
  filter(date >=data_start) %>%
  arrange('date') %>%
  tail(1) %>%
  mutate(
    date = NULL,
    value.GDPNOW = format(round(value.GDPNOW, 1), nsmall=1),
    value.PCENOW = format(round(value.PCENOW, 1), nsmall=1),
    value.GDPINOW = format(round(value.GDPINOW, 1), nsmall=1),
    value.GOVNOW = format(round(value.GOVNOW, 1), nsmall=1)
  ) %>%
  rename(
    'GDP Forecast' = value.GDPNOW,
    'Consumption Forecast' = value.PCENOW,
    'Investment Forecast' = value.GDPINOW,
    'Government Forecast' = value.GOVNOW
  ) %>%
  select(c('GDP Forecast', 'Consumption Forecast', 'Investment Forecast', 'Government Forecast')) %>% 
  remove_rownames() %>%
  kable(escape=F, align='c') %>%
  column_spec(1, border_left = T, extra_css = "border-left:2px solid lightgrey;") %>%
  column_spec(4, border_right = T, extra_css = "border-right:2px solid lightgrey;") %>%
  row_spec(0, bold = T, background = '#003D73',color = '#ffffff') %>%
  row_spec(1, color = '#000000') %>%
  kable_styling(row_label_position = 'c', font_size=12)
```

This is a sample economic report built using Quarto and R. The R code chunks could be substituted with Python code chunks. LaTex syntax can be used for custom formatting, like the blue headers and footers for example. Quarto has many native features that make report automation and customization easy.

Code Chunk Example:

```{r}
#| echo: true
#| eval: false
library(ecolytics)
gdp_data %>%
  filter(date >=data_start) %>%
  arrange('date') 
```

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-align: center
#| fig-height: 8
#| fig-width: 10
#| fig-format: pdf

# Create Initial Chart Data Set
fred_keys  <-c('ATLSBUBEI','UNRATE','UNEMPLOY','JTSJOL','PAYEMS','PERMIT','HOUST','SAHMREALTIME', 'RRSFS','CPIAUCSL','CPILFESL','UMCSENT','PSAVERT')

keys_rename <-c('date','Business Sentiment','Unemployment Rate','Unemployed Persons','Job Openings','Non-Farm Payrolls','Building Permits','Housing Starts','Sahm Recession Indicator', 'Retail Sales', 'Core CPI','Core CPI ex Food and Energy','Consumer Sentiment','Savings Rate','recession', 'quarter', 'year')

chart_data <-eco.download(keys = fred_keys) 
colnames(chart_data) <-keys_rename
chart_data <-chart_data %>%
  subset(date >= data_start) %>%
  arrange(date) %>%
  mutate(
    `Retail Sales` = (`Retail Sales` / lag(`Retail Sales`,12) - 1) * 100,
    `Core CPI` = (`Core CPI` / lag(`Core CPI`, 12) - 1) * 100,
    `Core CPI ex Food and Energy` = (`Core CPI ex Food and Energy`/ lag(`Core CPI ex Food and Energy`, 12) -1) * 100,
    `Job Openings` = `Job Openings` / 1000,
    `Unemployed Persons` = `Unemployed Persons` / 1000,
    `Housing Starts` = `Housing Starts` /1000,
    `Building Permits` = `Building Permits`/1000
) 

# Chart 1
lab_list <-list(
  subtitle = 'Inflation finally coming down',
  title = 'Inflation Measures',
  caption = 'Source: Bureau of Labor Statistics',
  y = 'Index',
  x=''
)

c1 <-eco.plot(plot.type = 'dual line', df=chart_data, x='date', y1='Core CPI', y2= 'Core CPI ex Food and Energy', labels.list = lab_list)

# Chrt 2
lab_list <-list(
  subtitle = 'Measures consumer feelings about economy',
  title = 'Consumer Sentiment',
  caption = 'Source: University of Michigan',
  y = 'Index',
  x =''
)

c2 <-eco.plot(plot.type='line', df=chart_data, x='date', y1='Consumer Sentiment', labels.list = lab_list)

#Chart 3
lab_list <-list(
  subtitle = 'YoY',
  title = 'Advance Retail Sales',
  caption = 'Source: St. Louis Fed',
  y = '%',
  x=''
)

c3 <-eco.plot(plot.type = 'line', df=chart_data, x='date', y1='Retail Sales', labels.list = lab_list)

# Chart 4
lab_list <-list(
  subtitle = 'Housing declining with greater economy',
  title = 'Housing Measures',
  caption = 'Source: Bureau of Labor Statistics',
  y = '000s',
  x=''
)

c4 <-eco.plot(plot.type = 'dual line', df=chart_data, x='date', y1='Housing Starts', y2='Building Permits', labels.list = lab_list)

# Chart 5
lab_list <-list(
  subtitle = 'Job vacancies outpace unemployed',
  title = 'Job Vacancies v Unemployed',
  caption = 'Source: Bureau of Labor Statistics',
  y = 'Index',
  x=''
)
  
grid.arrange(c1, c2, c3, c4, ncol=2, nrow=2)
```
